// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const (
	Init    = "init"
	Success = "success"
	Fail    = "fail"
)

const TableNamePushInfo = "push_info"

// PushInfo mapped from table <push_info>
type PushInfo struct {
	ID         int64     `gorm:"column:id;type:bigint;primaryKey;autoIncrement:true" json:"id"`
	EventID    string    `gorm:"column:event_id;type:varchar(36);not null;uniqueIndex:push_info_event_id_uindex,priority:1;comment:事件唯一 ID" json:"event_id"` // 事件唯一 ID
	Username   string    `gorm:"column:username;type:varchar(255);not null;comment:用户名" json:"username"`                                                     // 用户名
	Repository string    `gorm:"column:repository;type:varchar(255);not null" json:"repository"`
	Diff       string    `gorm:"column:diff;type:text;not null" json:"diff"`
	EventTime  time.Time `gorm:"column:event_time;type:timestamp;not null" json:"event_time"`
	Status     string    `gorm:"column:status;type:varchar(8);not null;default:init;comment:事件状态(init,success,fail)" json:"status"` // 事件状态(init,success,fail)
	GmtCreate  time.Time `gorm:"column:gmt_create;type:timestamp;not null;default:CURRENT_TIMESTAMP" json:"gmt_create"`
	GmtUpdate  time.Time `gorm:"column:gmt_update;type:timestamp;not null;default:CURRENT_TIMESTAMP" json:"gmt_update"`
}

// TableName PushInfo's table name
func (*PushInfo) TableName() string {
	return TableNamePushInfo
}
